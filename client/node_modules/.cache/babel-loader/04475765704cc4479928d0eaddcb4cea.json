{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist'; // import thunk from 'redux-thunk';\n\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from './shop/shopSagas';\nimport rootReducer from './rootReducer';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [applyMiddleware(sagaMiddleware)];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(applyMiddleware(logger));\n}\n\nexport const store = createStore(rootReducer, compose(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/yuzhang/Documents/learning/crown-clothing/src/redux/store.ts"],"names":["createStore","applyMiddleware","compose","logger","persistStore","createSagaMiddleware","fetchCollectionsStart","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACR,eAAe,CAACO,cAAD,CAAhB,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBZ,eAAe,CAACE,MAAD,CAAhC;AACD;;AAED,OAAO,MAAMW,KAAK,GAAGd,WAAW,CAACO,WAAD,EAAcL,OAAO,CAAC,GAAGO,WAAJ,CAArB,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBT,qBAAnB;AAEA,OAAO,MAAMU,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\n// import thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from './shop/shopSagas';\nimport rootReducer from './rootReducer';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [applyMiddleware(sagaMiddleware)];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(applyMiddleware(logger));\n}\n\nexport const store = createStore(rootReducer, compose(...middlewares));\n\nsagaMiddleware.run(fetchCollectionsStart);\n\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}