{"ast":null,"code":"var _jsxFileName = \"/Users/yuzhang/Documents/learning/crown-clothing/src/pages/ShopPage/ShopPage.tsx\";\nimport React, { memo, useEffect, useState } from 'react';\nimport { Route, useRouteMatch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview';\nimport CollectionPage from '../CollectionPage/CollectionPage';\nimport { updateCollections } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\nimport './ShopPage.styles.scss';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nconst ShopPage = memo(() => {\n  const [loading, setLoading] = useState(true);\n  const match = useRouteMatch();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(updateCollections(collectionsMap));\n      setLoading(false);\n    }); // return () => {\n    //   unsubscribeFromSnapShot();\n    // };\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n      isLoading: loading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: loading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n});\nexport default ShopPage;","map":{"version":3,"sources":["/Users/yuzhang/Documents/learning/crown-clothing/src/pages/ShopPage/ShopPage.tsx"],"names":["React","memo","useEffect","useState","Route","useRouteMatch","useDispatch","CollectionsOverview","CollectionPage","updateCollections","WithSpinner","firestore","convertCollectionsSnapshotToMap","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","loading","setLoading","match","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","path","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,kBAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAO,wBAAP;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,MAAMC,8BAA8B,GAAGH,WAAW,CAACH,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGJ,WAAW,CAACF,cAAD,CAA7C;AAEA,MAAMO,QAAkB,GAAGd,IAAI,CAAC,MAAM;AACpC,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMe,KAAK,GAAGb,aAAa,EAA3B;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,YAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACV,iBAAiB,CAACgB,cAAD,CAAlB,CAAR;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJD,EAFc,CAOd;AACA;AACA;AACD,GAVQ,EAUN,CAACE,QAAD,CAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAED,KAAK,CAACQ,IAAK,EAFtB;AAGE,IAAA,MAAM,EAAGC,KAAD,iBACN,oBAAC,8BAAD;AAAgC,MAAA,SAAS,EAAEX;AAA3C,OAAwDW,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAET,KAAK,CAACQ,IAAK,gBADtB;AAEE,IAAA,MAAM,EAAGC,KAAD,iBACN,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAEX;AAAtC,OAAmDW,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD,CAjC8B,CAA/B;AAmCA,eAAeZ,QAAf","sourcesContent":["import React, { memo, useEffect, useState } from 'react';\nimport { Route, useRouteMatch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview';\nimport CollectionPage from '../CollectionPage/CollectionPage';\nimport { updateCollections } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\nimport './ShopPage.styles.scss';\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage: React.FC = memo(() => {\n  const [loading, setLoading] = useState(true);\n  const match = useRouteMatch();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(updateCollections(collectionsMap));\n      setLoading(false);\n    });\n    // return () => {\n    //   unsubscribeFromSnapShot();\n    // };\n  }, [dispatch]);\n\n  return (\n    <div className=\"shop-page\">\n      <Route\n        exact\n        path={`${match.path}`}\n        render={(props) => (\n          <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n        )}\n      />\n      <Route\n        path={`${match.path}/:collectionId`}\n        render={(props) => (\n          <CollectionPageWithSpinner isLoading={loading} {...props} />\n        )}\n      />\n    </div>\n  );\n});\n\nexport default ShopPage;\n"]},"metadata":{},"sourceType":"module"}