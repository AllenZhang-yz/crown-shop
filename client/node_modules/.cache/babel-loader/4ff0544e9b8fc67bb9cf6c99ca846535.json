{"ast":null,"code":"var _jsxFileName = \"/Users/yuzhang/Documents/learning/crown-clothing/src/components/WithSpinner/WithSpinner.tsx\";\nimport React from 'react';\nimport { SpinnerContainer, SpinnerOverlay } from './WithSpinner.style';\n\nconst WithSpinner = WrappedComponent => {\n  const Spinner = ({\n    isLoading,\n    ...otherProps\n  }) => {\n    return isLoading ? /*#__PURE__*/React.createElement(SpinnerOverlay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SpinnerContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    })) : /*#__PURE__*/React.createElement(WrappedComponent, Object.assign({}, otherProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return Spinner;\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["/Users/yuzhang/Documents/learning/crown-clothing/src/components/WithSpinner/WithSpinner.tsx"],"names":["React","SpinnerContainer","SpinnerOverlay","WithSpinner","WrappedComponent","Spinner","isLoading","otherProps"],"mappings":";AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,qBAAjD;;AAMA,MAAMC,WAAW,GAAsBC,gBAAnB,IAA0D;AAC5E,QAAMC,OAAiC,GAAG,CAAC;AAAEC,IAAAA,SAAF;AAAa,OAAGC;AAAhB,GAAD,KAAkC;AAC1E,WAAOD,SAAS,gBACd,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADc,gBAKd,oBAAC,gBAAD,oBAAuBC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALF;AAOD,GARD;;AASA,SAAOF,OAAP;AACD,CAXD;;AAaA,eAAeF,WAAf","sourcesContent":["import React, { ComponentType, FC } from 'react';\nimport { SpinnerContainer, SpinnerOverlay } from './WithSpinner.style';\n\ninterface WithLoadingProps {\n  isLoading: boolean;\n}\n\nconst WithSpinner = <P extends object>(WrappedComponent: ComponentType<P>) => {\n  const Spinner: FC<P & WithLoadingProps> = ({ isLoading, ...otherProps }) => {\n    return isLoading ? (\n      <SpinnerOverlay>\n        <SpinnerContainer />\n      </SpinnerOverlay>\n    ) : (\n      <WrappedComponent {...(otherProps as P)} />\n    );\n  };\n  return Spinner;\n};\n\nexport default WithSpinner;\n"]},"metadata":{},"sourceType":"module"}