{"ast":null,"code":"var _jsxFileName = \"/Users/yuzhang/Documents/learning/crown-clothing/src/components/SignUp/SignUp.tsx\";\nimport React, { useState, memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport FormInput from '../FormInput/FormInput';\nimport CustomButton from '../CustomButton/CustomButton';\nimport { signUpStart } from '../../redux/user/userActions';\nimport './SignUp.styles.scss';\nconst initialSignUpInput = {\n  displayName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\nconst SignUp = memo(() => {\n  const [signUpInput, setSignUpInput] = useState(initialSignUpInput);\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = signUpInput;\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    try {\n      signUpStart(signUpInput);\n      setSignUpInput(initialSignUpInput);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSignUpInput({ ...signUpInput,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    handleChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    handleChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"SIGN UP\")));\n});\nexport default SignUp;","map":{"version":3,"sources":["/Users/yuzhang/Documents/learning/crown-clothing/src/components/SignUp/SignUp.tsx"],"names":["React","useState","memo","useDispatch","FormInput","CustomButton","signUpStart","initialSignUpInput","displayName","email","password","confirmPassword","SignUp","signUpInput","setSignUpInput","dispatch","handleSubmit","e","preventDefault","alert","error","console","handleChange","name","value","target"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent, ChangeEvent, memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport FormInput from '../FormInput/FormInput';\nimport CustomButton from '../CustomButton/CustomButton';\nimport { signUpStart } from '../../redux/user/userActions';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport './SignUp.styles.scss';\n\nexport interface ISignUp {\n  displayName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst initialSignUpInput = {\n  displayName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst SignUp: React.FC = memo(() => {\n  const [signUpInput, setSignUpInput] = useState<ISignUp>(initialSignUpInput);\n  const { displayName, email, password, confirmPassword } = signUpInput;\n  const dispatch = useDispatch();\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n    try {\n      signUpStart(signUpInput);\n      setSignUpInput(initialSignUpInput);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setSignUpInput({ ...signUpInput, [name]: value });\n  };\n\n  return (\n    <div className=\"sign-up\">\n      <h2 className=\"title\">I do not have an account</h2>\n      <span>Sign up with your email and password</span>\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          handleChange={handleChange}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          handleChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          handleChange={handleChange}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          handleChange={handleChange}\n          label=\"Confirm Password\"\n          required\n        />\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\n      </form>\n    </div>\n  );\n});\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}