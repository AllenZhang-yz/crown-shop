{"ast":null,"code":"// import { SHOP_DATA } from '../../Shop.data';\nimport { ShopActionTypes } from './shopActionTypes';\nconst initialState = {\n  collections: {},\n  isFetching: false,\n  errorMessage: undefined\n};\n\nconst shopReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ShopActionTypes.FETCH_COLLECTIONS_START:\n      return { ...state,\n        isFetching: true\n      };\n\n    case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return { ...state,\n        collections: action.payload,\n        isFetching: false\n      };\n\n    case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n      return { ...state,\n        isFetching: false,\n        errorMessage: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["/Users/yuzhang/Documents/learning/crown-clothing/src/redux/shop/shopReducer.ts"],"names":["ShopActionTypes","initialState","collections","isFetching","errorMessage","undefined","shopReducer","state","action","type","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","payload","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA;AACA,SAASA,eAAT,QAAgC,mBAAhC;AA8BA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,WAAW,EAAE,EADkB;AAE/BC,EAAAA,UAAU,EAAE,KAFmB;AAG/BC,EAAAA,YAAY,EAAEC;AAHiB,CAAjC;;AAMA,MAAMC,WAAyC,GAAG,CAChDC,KAAK,GAAGN,YADwC,EAEhDO,MAFgD,KAG7C;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,uBAArB;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAKF,SAAKH,eAAe,CAACW,yBAArB;AACE,aAAO,EACL,GAAGJ,KADE;AAELL,QAAAA,WAAW,EAAEM,MAAM,CAACI,OAFf;AAGLT,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF,SAAKH,eAAe,CAACa,yBAArB;AACE,aAAO,EACL,GAAGN,KADE;AAELJ,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,YAAY,EAAEI,MAAM,CAACI;AAHhB,OAAP;;AAKF;AACE,aAAOL,KAAP;AApBJ;AAsBD,CA1BD;;AA4BA,eAAeD,WAAf","sourcesContent":["// import { SHOP_DATA } from '../../Shop.data';\nimport { ShopActionTypes } from './shopActionTypes';\nimport { Reducer } from 'redux';\n\nexport interface IItem {\n  id: number;\n  name: string;\n  imageUrl: string;\n  price: number;\n}\n\nexport interface ICollection {\n  id: number;\n  title: string;\n  routeName: string;\n  items: IItem[];\n}\n\ntype ErrorMessage = string | undefined;\n\nexport interface IShopState {\n  collections: { [key: string]: ICollection };\n  isFetching: boolean;\n  errorMessage: ErrorMessage;\n}\n\nexport interface IAction {\n  type: string;\n  payload?: { [key: string]: ICollection } | ErrorMessage;\n}\n\nconst initialState: IShopState = {\n  collections: {},\n  isFetching: false,\n  errorMessage: undefined,\n};\n\nconst shopReducer: Reducer<IShopState, IAction> = (\n  state = initialState,\n  action: IAction\n) => {\n  switch (action.type) {\n    case ShopActionTypes.FETCH_COLLECTIONS_START:\n      return {\n        ...state,\n        isFetching: true,\n      };\n\n    case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return {\n        ...state,\n        collections: action.payload as { [key: string]: ICollection },\n        isFetching: false,\n      };\n    case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        errorMessage: action.payload as ErrorMessage,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;\n"]},"metadata":{},"sourceType":"module"}