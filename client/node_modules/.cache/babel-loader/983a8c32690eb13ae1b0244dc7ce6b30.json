{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyBCoKyGDmIP683VcHasH0oxRQlv11otg4Q',\n  authDomain: 'crown-shop-db-df140.firebaseapp.com',\n  databaseURL: 'https://crown-shop-db-df140.firebaseio.com',\n  projectId: 'crown-shop-db-df140',\n  storageBucket: 'crown-shop-db-df140.appspot.com',\n  messagingSenderId: '745674523794',\n  appId: '1:745674523794:web:0499f650e13778144bd24b',\n  measurementId: 'G-DRK4JGRYYS'\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(object => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, object);\n  });\n  await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => doc.data());\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/Users/yuzhang/Documents/learning/crown-clothing/src/firebase/firebase.utils.ts"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createAt","Date","set","error","console","log","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","object","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","reduce","accumulator","title","toLowerCase","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","initializeApp","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { ICollection } from '../redux/shop/shopReducer';\n\nconst config = {\n  apiKey: 'AIzaSyBCoKyGDmIP683VcHasH0oxRQlv11otg4Q',\n  authDomain: 'crown-shop-db-df140.firebaseapp.com',\n  databaseURL: 'https://crown-shop-db-df140.firebaseio.com',\n  projectId: 'crown-shop-db-df140',\n  storageBucket: 'crown-shop-db-df140.appspot.com',\n  messagingSenderId: '745674523794',\n  appId: '1:745674523794:web:0499f650e13778144bd24b',\n  measurementId: 'G-DRK4JGRYYS',\n};\n\nexport const createUserProfileDocument = async (\n  userAuth: any,\n  additionalData?: any\n) => {\n  if (!userAuth) {\n    return;\n  }\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (\n  collectionKey: string,\n  objectsToAdd: ICollection[]\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach((object) => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, object);\n  });\n  await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = (\n  collections: firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\n) => {\n  const transformedCollection = collections.docs.map((doc) =>\n    doc.data()\n  ) as ICollection[];\n  return transformedCollection.reduce(\n    (accumulator: { [key: string]: ICollection }, collection: ICollection) => {\n      accumulator[collection.title.toLowerCase()] = collection;\n      return accumulator;\n    },\n    {}\n  );\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}