{"ast":null,"code":"var _jsxFileName = \"/Users/yuzhang/Documents/learning/crown-clothing/src/pages/ShopPage/ShopPage.tsx\";\nimport React, { memo, useEffect, useState } from 'react';\nimport { Route, useRouteMatch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview';\nimport CollectionPage from '../CollectionPage/CollectionPage';\nimport { updateCollections } from '../../redux/shop/shopActions';\nimport './ShopPage.styles.scss';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst ShopPage = memo(() => {\n  const [loading, setLoading] = useState(true);\n  const match = useRouteMatch();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const collectionRef = firestore.collection('collections');\n    let unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(updateCollections(collectionsMap));\n      setLoading(false);\n    });\n    return () => {\n      unsubscribeFromSnapShot();\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n});\nexport default ShopPage;","map":{"version":3,"sources":["/Users/yuzhang/Documents/learning/crown-clothing/src/pages/ShopPage/ShopPage.tsx"],"names":["React","memo","useEffect","useState","Route","useRouteMatch","useDispatch","CollectionsOverview","CollectionPage","updateCollections","firestore","convertCollectionsSnapshotToMap","ShopPage","loading","setLoading","match","dispatch","collectionRef","collection","unsubscribeFromSnapShot","onSnapshot","snapshot","collectionsMap","path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,kBAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AAEA,OAAO,wBAAP;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,MAAMC,QAAkB,GAAGX,IAAI,CAAC,MAAM;AACpC,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMY,KAAK,GAAGV,aAAa,EAA3B;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAIC,uBAAuB,GAAGF,aAAa,CAACG,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AACzE,YAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACP,iBAAiB,CAACa,cAAD,CAAlB,CAAR;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJ6B,CAA9B;AAKA,WAAO,MAAM;AACXK,MAAAA,uBAAuB;AACxB,KAFD;AAGD,GAVQ,EAUN,CAACH,QAAD,CAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAED,KAAK,CAACQ,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEhB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEQ,KAAK,CAACQ,IAAK,gBAA3B;AAA4C,IAAA,SAAS,EAAEf,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAtB8B,CAA/B;AAwBA,eAAeI,QAAf","sourcesContent":["import React, { memo, useEffect, useState } from 'react';\nimport { Route, useRouteMatch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport CollectionsOverview from '../../components/CollectionsOverview/CollectionsOverview';\nimport CollectionPage from '../CollectionPage/CollectionPage';\nimport { updateCollections } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\nimport './ShopPage.styles.scss';\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\nconst ShopPage: React.FC = memo(() => {\n  const [loading, setLoading] = useState(true);\n  const match = useRouteMatch();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const collectionRef = firestore.collection('collections');\n    let unsubscribeFromSnapShot = collectionRef.onSnapshot(async (snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(updateCollections(collectionsMap));\n      setLoading(false);\n    });\n    return () => {\n      unsubscribeFromSnapShot();\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"shop-page\">\n      <Route exact path={`${match.path}`} component={CollectionsOverview} />\n      <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n    </div>\n  );\n});\n\nexport default ShopPage;\n"]},"metadata":{},"sourceType":"module"}