{"ast":null,"code":"import { UserActionTypes } from './userActionTypes';\nconst initialState = {\n  currentUser: null,\n  error: null\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_SUCCESS:\n    case UserActionTypes.SIGN_UP_SUCCESS:\n      if (action.payload) {\n        return { ...state,\n          currentUser: action.payload,\n          error: null\n        };\n      }\n\n      return state;\n\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return { ...state,\n        currentUser: null,\n        error: null\n      };\n\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n    case UserActionTypes.SIGN_UP_FAILURE:\n      if (action.payload) {\n        return { ...state,\n          error: action.payload\n        };\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/yuzhang/Documents/learning/crown-clothing/src/redux/user/userReducer.ts"],"names":["UserActionTypes","initialState","currentUser","error","userReducer","state","action","type","SIGN_IN_SUCCESS","SIGN_UP_SUCCESS","payload","SIGN_OUT_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_FAILURE","SIGN_UP_FAILURE"],"mappings":"AACA,SAASA,eAAT,QAAgC,mBAAhC;AAkBA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,WAAW,EAAE,IADkB;AAE/BC,EAAAA,KAAK,EAAE;AAFwB,CAAjC;;AAIA,MAAMC,WAAoB,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAA2C;AACtE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,eAAe,CAACQ,eAArB;AACA,SAAKR,eAAe,CAACS,eAArB;AACE,UAAIH,MAAM,CAACI,OAAX,EAAoB;AAClB,eAAO,EACL,GAAGL,KADE;AAELH,UAAAA,WAAW,EAAEI,MAAM,CAACI,OAFf;AAGLP,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD;;AACD,aAAOE,KAAP;;AACF,SAAKL,eAAe,CAACW,gBAArB;AACE,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,WAAW,EAAE,IAFR;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKH,eAAe,CAACY,eAArB;AACA,SAAKZ,eAAe,CAACa,gBAArB;AACA,SAAKb,eAAe,CAACc,eAArB;AACE,UAAIR,MAAM,CAACI,OAAX,EAAoB;AAClB,eAAO,EACL,GAAGL,KADE;AAELF,UAAAA,KAAK,EAAEG,MAAM,CAACI;AAFT,SAAP;AAID;;AACD,aAAOL,KAAP;;AACF;AACE,aAAOA,KAAP;AA5BJ;AA8BD,CA/BD;;AAiCA,eAAeD,WAAf","sourcesContent":["import { Action, Reducer } from 'redux';\nimport { UserActionTypes } from './userActionTypes';\nimport { ISignIn } from '../../components/SignIn/SignIn';\n\nexport interface ICurrentUser {\n  id: string;\n  [key: string]: string;\n}\n\nexport interface IUserState {\n  currentUser: ICurrentUser | null;\n  error: string | null;\n}\n\nexport interface IAction extends Action {\n  type: string;\n  payload?: ICurrentUser | null | string | ISignIn;\n}\n\nconst initialState: IUserState = {\n  currentUser: null,\n  error: null,\n};\nconst userReducer: Reducer = (state = initialState, action: IAction) => {\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_SUCCESS:\n    case UserActionTypes.SIGN_UP_SUCCESS:\n      if (action.payload) {\n        return {\n          ...state,\n          currentUser: action.payload as ICurrentUser,\n          error: null,\n        };\n      }\n      return state;\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return {\n        ...state,\n        currentUser: null,\n        error: null,\n      };\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n    case UserActionTypes.SIGN_UP_FAILURE:\n      if (action.payload) {\n        return {\n          ...state,\n          error: action.payload as string,\n        };\n      }\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}